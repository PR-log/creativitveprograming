# 연도및 시도별 총인구, 남성, 여성 인구 리스트)
JHO_pop = {
    2015: {
        "전국": { "총": 51069375, "남성": 25608502, "여성": 25460873 },
        "서울": { "총": 9904312, "남성": 4859535, "여성": 5044777 },
        "부산": { "총": 3448737, "남성": 1701347, "여성": 1747390 },
        "대구": { "총": 2466052, "남성": 1228511, "여성": 1237541 },
        "인천": { "총": 2890451, "남성": 1455017, "여성": 1435434 },
        "광주": { "총": 1502881, "남성": 748867, "여성": 754014 },
        "대전": { "총": 1538394, "남성": 772243, "여성": 766151 },
        "울산": { "총": 1166615, "남성": 606924, "여성": 559691 },
        "세종": { "총": 204088, "남성": 103210, "여성": 100878 },
        "경기": { "총": 12479061, "남성": 6309661, "여성": 6169400 },
        "강원": { "총": 1518040, "남성": 768241, "여성": 749799 },
        "충북": { "총": 1589347, "남성": 805377, "여성": 783970 },
        "충남": { "총": 2107802, "남성": 1078310, "여성": 1029492 },
        "전북": { "총": 1834114, "남성": 915729, "여성": 918385 },
        "전남": { "총": 1799044, "남성": 900967, "여성": 898077 },
        "경북": { "총": 2680294, "남성": 1351037, "여성": 1329257 },
        "경남": { "총": 3334524, "남성": 1698737, "여성": 1635787 },
        "제주": { "총": 605619, "남성": 304789, "여성": 300830 }
    },
    2016: {
        "전국": { "총": 51269554, "남성": 25696987, "여성": 25572567 },
        "서울": { "총": 9805506, "남성": 4799115, "여성": 5006391 },
        "부산": { "총": 3440484, "남성": 1694026, "여성": 1746458 },
        "대구": { "총": 2461002, "남성": 1223733, "여성": 1237269 },
        "인천": { "총": 2913024, "남성": 1465699, "여성": 1447325 },
        "광주": { "총": 1501557, "남성": 747303, "여성": 754254 },
        "대전": { "총": 1535445, "남성": 770971, "여성": 764474 },
        "울산": { "총": 1166033, "남성": 605618, "여성": 560415 },
        "세종": { "총": 242507, "남성": 122648, "여성": 119859 },
        "경기": { "총": 12671956, "남성": 6405301, "여성": 6266655 },
        "강원": { "총": 1521751, "남성": 769461, "여성": 752290 },
        "충북": { "총": 1603404, "남성": 814049, "여성": 789355 },
        "충남": { "총": 2132566, "남성": 1091091, "여성": 1041475 },
        "전북": { "총": 1833168, "남성": 915493, "여성": 917675 },
        "전남": { "총": 1796017, "남성": 901500, "여성": 894517 },
        "경북": { "총": 2682169, "남성": 1354997, "여성": 1327172 },
        "경남": { "총": 3339633, "남성": 1701849, "여성": 1637784 },
        "제주": { "총": 623332, "남성": 314133, "여성": 309199 }
    },
    2017: {
        "전국": { "총": 51422507, "남성": 25768055, "여성": 25654452 },
        "서울": { "총": 9741871, "남성": 4757642, "여성": 4984229 },
        "부산": { "총": 3416918, "남성": 1680933, "여성": 1735985 },
        "대구": { "총": 2453041, "남성": 1218326, "여성": 1234715 },
        "인천": { "총": 2925967, "남성": 1472081, "여성": 1453886 },
        "광주": { "총": 1496172, "남성": 745122, "여성": 751050 },
        "대전": { "총": 1525849, "남성": 765718, "여성": 760131 },
        "울산": { "총": 1157077, "남성": 600093, "여성": 556984 },
        "세종": { "총": 276589, "남성": 139347, "여성": 137242 },
        "경기": { "총": 12851601, "남성": 6502723, "여성": 6348878 },
        "강원": { "총": 1521386, "남성": 769043, "여성": 752343 },
        "충북": { "총": 1611009, "남성": 818500, "여성": 792509 },
        "충남": { "총": 2162426, "남성": 1108610, "여성": 1053816 },
        "전북": { "총": 1826174, "남성": 911592, "여성": 914582 },
        "전남": { "총": 1792319, "남성": 899077, "여성": 893242 },
        "경북": { "총": 2677058, "남성": 1353083, "여성": 1323975 },
        "경남": { "총": 3345293, "남성": 1702150, "여성": 1643143 },
        "제주": { "총": 641757, "남성": 324015, "여성": 317742 }
    },
    2018: {
        "전국": { "총": 51629512, "남성": 25877195, "여성": 25775217 },
        "서울": { "총": 9673936, "남성": 4718972, "여성": 4954964 },
        "부산": { "총": 3395278, "남성": 1668984, "여성": 1726294 },
        "대구": { "총": 2444412, "남성": 1212777, "여성": 1231635 },
        "인천": { "총": 2936117, "남성": 1476097, "여성": 1460020 },
        "광주": { "총": 1490092, "남성": 741728, "여성": 748364 },
        "대전": { "총": 1511214, "남성": 758035, "여성": 753179 },
        "울산": { "총": 1150116, "남성": 595795, "여성": 554321 },
        "세종": { "총": 312374, "남성": 157289, "여성": 155085 },
        "경기": { "총": 13103188, "남성": 6635106, "여성": 6468182 },
        "강원": { "총": 1520391, "남성": 768604, "여성": 751787 },
        "충북": { "총": 1620935, "남성": 826183, "여성": 794752 },
        "충남": { "총": 2181416, "남성": 1119996, "여성": 1061420 },
        "전북": { "총": 1818157, "남성": 907683, "여성": 910474 },
        "전남": { "총": 1790352, "남성": 900154, "여성": 890198 },
        "경북": { "총": 2672902, "남성": 1352869, "여성": 1320333 },
        "경남": { "총": 3350350, "남성": 1703904, "여성": 1646446 },
        "제주": { "총": 658282, "남성": 333019, "여성": 325263 }
    },
    2019: {
        "전국": { "총": 51779203, "남성": 25952070, "여성": 25827133 },
        "서울": { "총": 9639541, "남성": 4690440, "여성": 4949101 },
        "부산": { "총": 3372692, "남성": 1655566, "여성": 1717126 },
        "대구": { "총": 2429940, "남성": 1203754, "여성": 1226186 },
        "인천": { "총": 2952237, "남성": 1484528, "여성": 1467709 },
        "광주": { "총": 1489730, "남성": 741287, "여성": 748443 },
        "대전": { "총": 1498839, "남성": 751585, "여성": 747254 },
        "울산": { "총": 1143692, "남성": 591965, "여성": 551727 },
        "세종": { "총": 338136, "남성": 170148, "여성": 167988 },
        "경기": { "총": 13300900, "남성": 6740448, "여성": 6550452 },
        "강원": { "총": 1520127, "남성": 767717, "여성": 752410 },
        "충북": { "총": 1629343, "남성": 832543, "여성": 796800 },
        "충남": { "총": 2188649, "남성": 1124678, "여성": 1063971 },
        "전북": { "총": 1807423, "남성": 902704, "여성": 904719 },
        "전남": { "총": 1787543, "남성": 901813, "여성": 885730 },
        "경상": { "총": 2668154, "남성": 1352404, "여성": 1315750 },
        "경상": { "총": 3347209, "남성": 1703892, "여성": 1643317 },
        "제주": { "총": 665048, "남성": 336598, "여성": 328450 }
    },
    2020: {
        "전국": { "총": 51829136, "남성": 25915207, "여성": 25913929 },
        "서울": { "총": 9586195, "남성": 4647733, "여성": 4938462 },
        "부산": { "총": 3349016, "남성": 1628745, "여성": 1710271 },
        "대구": { "총": 2410700, "남성": 1190271, "여성": 1220429 },
        "인천": { "총": 2945454, "남성": 1477064, "여성": 1468390 },
        "광주": { "총": 1488435, "남성": 734140, "여성": 743295 },
        "대전": { "총": 1488435, "남성": 744349, "여성": 744086 },
        "울산": { "총": 1135423, "남성": 585978, "여성": 549445 },
        "세종": { "총": 353933, "남성": 177939, "여성": 175994 },
        "경기": { "총": 13511676, "남성": 6828367, "여성": 6683309 },
        "강원": { "총": 1521763, "남성": 767674, "여성": 754089 },
        "충북": { "총": 1632088, "남성": 833819, "여성": 798269 },
        "충남": { "총": 2176636, "남성": 1117575, "여성": 1059061 },
        "전북": { "총": 1787766, "남성": 899058, "여성": 903708 },
        "전남": { "총": 1788807, "남성": 903281, "여성": 885526 },
        "경북": { "총": 2647757, "남성": 1338823, "여성": 1308934 },
        "경남": { "총": 3333056, "남성": 1672212, "여성": 1660844 },
        "제주": { "총": 670858, "남성": 338173, "여성": 332685 }
    },
    2021: {
        "전국": { "총": 51738071, "남성": 25850044, "여성": 25888027 },
        "서울": { "총": 9472127, "남성": 4584251, "여성": 4887876 },
        "부산": { "총": 3333056, "남성": 1672212, "여성": 1660844 },
        "대구": { "총": 2387435, "남성": 1177420, "여성": 1200015 },
        "인천": { "총": 2951087, "남성": 1484701, "여성": 1466406 },
        "광주": { "총": 1463326, "남성": 734140, "여성": 729186 },
        "대전": { "총": 1479740, "남성": 740481, "여성": 739259 },
        "울산": { "총": 1110753, "남성": 578207, "여성": 542546 },
        "세종": { "총": 366227, "남성": 183616, "여성": 182611 },
        "경기": { "총": 13652529, "남성": 6898723, "여성": 6758066 },
        "강원": { "총": 1521890, "남성": 767067, "여성": 754823 },
        "충북": { "총": 1624764, "남성": 828073, "여성": 796691 },
        "충남": { "총": 2175960, "남성": 1116815, "여성": 1059145 },
        "전북": { "총": 1778053, "남성": 891295, "여성": 887758 },
        "전남": { "총": 1788124, "남성": 897120, "여성": 881004 },
        "경북": { "총": 2635314, "남성": 1323767, "여성": 1311547 },
        "경남": { "총": 3305931, "남성": 1667752, "여성": 1638179 },
        "제주": { "총": 673107, "남성": 338809, "여성": 334298 }
    },
    2022: {
        "전국": { "총": 51692272, "남성": 25835298, "여성": 25856974 },
        "서울": { "총": 9417469, "남성": 4547051, "여성": 4870418 },
        "부산": { "총": 3316520, "남성": 1664892, "여성": 1651628 },
        "대구": { "총": 2370530, "남성": 1160317, "여성": 1210213 },
        "인천": { "총": 2970125, "남성": 1488790, "여성": 1481335 },
        "광주": { "총": 1457090, "남성": 728859, "여성": 740231 },
        "대전": { "총": 1480411, "남성": 747127, "여성": 733284 },
        "울산": { "총": 1100784, "남성": 573080, "여성": 537704 },
        "세종": { "총": 382589, "남성": 192165, "여성": 190424 },
        "경기": { "총": 13717827, "남성": 6938563, "여성": 6779264 },
        "강원": { "총": 1521890, "남성": 767067, "여성": 754823 },
        "충북": { "총": 1624930, "남성": 830923, "여성": 794070 },
        "충남": { "총": 2175960, "남성": 1116815, "여성": 1059145 },
        "전북": { "총": 1778053, "남성": 891295, "여성": 887758 },
        "전남": { "총": 1788124, "남성": 897120, "여성": 881004 },
        "경북": { "총": 2635314, "남성": 1323767, "여성": 1311547 },
        "경남": { "총": 3305931, "남성": 1667752, "여성": 1638179 },
        "제주": { "총": 673107, "남성": 338809, "여성": 334298 }
    },
    2023: {
        "전국": { "총": 51774521, "남성": 25903852, "여성": 25870669 },
        "서울": { "총": 9284512, "남성": 4543958, "여성": 4745554 },
        "부산": { "총": 3286754, "남성": 1651347, "여성": 1635407 },
        "대구": { "총": 2365862, "남성": 1158976, "여성": 1206886 },
        "인천": { "총": 2997105, "남성": 1499105, "여성": 1498000 },
        "광주": { "총": 1457900, "남성": 724226, "여성": 733674 },
        "대전": { "총": 1480125, "남성": 744127, "여성": 735998 },
        "울산": { "총": 1100007, "남성": 577103, "여성": 522904 },
        "세종": { "총": 386261, "남성": 193999, "여성": 192262 },
        "경기": { "총": 13815367, "남성": 6984511, "여성": 6830856 },
        "강원": { "총": 1521890, "남성": 767067, "여성": 754823 },
        "충북": { "총": 1632140, "남성": 832776, "여성": 799364 },
        "충남": { "총": 2182345, "남성": 1125008, "여성": 1057337 },
        "전북": { "총": 1790543, "남성": 901813, "여성": 889730 },
        "전남": { "총": 1790137, "남성": 902812, "여성": 887325 },
        "경북": { "총": 2640000, "남성": 1320000, "여성": 1320000 },
        "경남": { "총": 3311280, "남성": 1660000, "여성": 1651280 },
        "제주": { "총": 676767, "남성": 341483, "여성": 335284 }
    }
}
#######################################################################
# 1. 특정 연도의 인구 추출 함수
# 1-1. 특정 연도의 전국 총인구 추출 함수
def JHO_year_total(JHO_year):
    try:
        JHO_year = int(JHO_year)
    except ValueError:
        return "올바른 형식의 연도를 입력해야 합니다."

    if JHO_year in JHO_pop:
        return str(JHO_year) + "년의 총인구는" + str(JHO_pop[JHO_year]["전국"]["총"]) + "명입니다."
    else:
        return str(JHO_year) + "년에는 데이터가 존재하지 않습니다."
# 1-2. 특정 연도의 전국 남성 추출 함수
def JHO_year_m(JHO_year):
    #데이터 입력 오류 처리
    try:
        JHO_year = int(JHO_year)
    except ValueError:
        return "올바른 형식의 연도를 입력해야 합니다."
    
    if JHO_year in JHO_pop:
        return str(JHO_year) + "년의 전국 남성 인구는" + str(JHO_pop[JHO_year]["전국"]["남성"]) +"명입니다."
    else:
        return str(JHO_year) + "년에는 데이터가 존재하지 않습니다."
# 1-3. 특정 연도의 전국 여성 추출 함수
def JHO_year_w(JHO_year):
    JHO_year = int(JHO_year)
    if JHO_year in JHO_pop:
        return str(JHO_year) + "년의 전국 여성 인구는" + str(JHO_pop[JHO_year]["전국"]["여성"]) +"명입니다."
    else:
        return str(JHO_year) + "년에는 데이터가 존재하지 않습니다."
########################################################################
# 2. 특정 연도의 지역 인구 추출
# 2-1. 특정 연도의 지역 총인구 추출 함수
def JHO_year_area_total(JHO_year, JHO_area):
    try:
        JHO_year = int(JHO_year)
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 연도와 지역을 입력해야 합니다."

    if JHO_year in JHO_pop:
        if JHO_area in JHO_pop[JHO_year]:
            return str(JHO_year)+"년"+str(JHO_area)+"의 총인구는"+str(JHO_pop[JHO_year][JHO_area]["총"])+"명입니다."
        else:
            return str(JHO_area)+"지역의 데이터가 존재하지 않습니다."
    else:
        return str(JHO_year)+"년 데이터가 존재하지 않습니다."
# 2-2. 특정 연도의 지역 남성 추출 함수
def JHO_year_area_m(JHO_year, JHO_area):
    try:
        JHO_year = int(JHO_year)
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 연도와 지역을 입력해야 합니다."
    if JHO_year in JHO_pop:
        if JHO_area in JHO_pop[JHO_year]:
            return str(JHO_year)+"년"+str(JHO_area)+"의 남성인구는"+str(JHO_pop[JHO_year][JHO_area]["남성"])+"명입니다."
        else:
            return str(JHO_area)+"지역의 데이터가 존재하지 않습니다."
    else:
        return str(JHO_year)+"년 데이터가 존재하지 않습니다."
# 2-3. 특정 연도의 지역 여성 추출 함수
def JHO_year_area_w(JHO_year, JHO_area):
    try:
        JHO_year = int(JHO_year)
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 연도와 지역을 입력해야 합니다."
    if JHO_year in JHO_pop:
        if JHO_area in JHO_pop[JHO_year]:
            return str(JHO_year)+"년"+str(JHO_area)+"의 여성인구는"+str(JHO_pop[JHO_year][JHO_area]["여성"])+"명입니다."
        else:
            return str(JHO_area)+"지역의 데이터가 존재하지 않습니다."
    else:
        return str(JHO_year)+"년 데이터가 존재하지 않습니다."
#######################################################################
# 3. 특정 연도 최고,최저

# 3-1. 특정 연도에 전체 인구가 가장 많은 지역
def JHO_most_populous_region(JHY_year):
    try:
        JHY_year = int(JHY_year)
    except ValueError:
        return "올바른 형식의 연도를 입력해야 합니다."
    
    # 연도가 데이터에 존재하는지 확인
    if JHY_year in JHO_pop:
        # 해당 연도의 데이터를 가져와서 "총" 값을 기준으로 정렬
        JHY_sorted_regions = sorted(JHO_pop[JHY_year].items(), key=lambda x: x[1]["총"], reverse=True)
        
        # 두 번째로 인구가 많은 지역을 선택 (리스트의 두 번째 항목)
        if len(JHY_sorted_regions) > 1:
            JHY_second_populous = JHY_sorted_regions[2]
            return f"{JHY_year}년의 가장 인구수가 많은 지역은 {JHY_second_populous[0]}이고, 인구는 {JHY_second_populous[1]['총']}명입니다."
        else:
            return f"{JHY_year}년에는 두 번째로 인구가 많은 지역이 없습니다."
    else:
        return f"{JHY_year}년 데이터가 존재하지 않습니다."
    #나중에 n번째 구하는 코드로 수정 가능

# 3-2. 특정 연도에 남성 인구가 가장 많은 지역

# 3-3. 특정 연도에 여성 인구가 가장 많은 지역

# 3-4. 특정 연도에 전체 인구가 가장 적은 지역

# 3-5. 특정 연도에 남성 인구가 가장 적은 지역

# 3-6. 특정 연도에 여성 인구가 가장 적은 지역

#########################################################################
# 4. 특정 지역의 9년간 평균 인구 계산
# 4-1 특정 지역의 9년간 평균 총인구 계산
def JHO_9_t(JHO_area):
    try:
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 지역 형식이 아닙니다."
    if JHO_area in JHO_pop[2015]:
        JHO_12 = sum(JHO_pop[year][JHO_area]["총"] for year in range(2015, 2024)) / 9
        return str(JHO_area) + "의 9년간 평균 총인구는 " + str(int(JHO_12)) + "명입니다."
    else:
        return str(JHO_area) + "의 데이터가 존재하지 않습니다."
# 4-2. 특정 지역의 9년간 평균 남성인구 계산
def JHO_9_m(JHO_area):
    try:
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 지역 형식이 아닙니다."
    if JHO_area in JHO_pop[2015]:
        JHO_12 = sum(JHO_pop[year][JHO_area]["남성"] for year in range(2015, 2024)) / 9
        return str(JHO_area) + "의 9년간 평균 남성인구는 " + str(int(JHO_12)) + "명입니다."
    else:
        return str(JHO_area) + "의 데이터가 존재하지 않습니다."
# 4-3. 특정 지역의 9년간 평균 여성인구 계산
def JHO_9_w(JHO_area):
    try:
        JHO_area = str(JHO_area)
    except ValueError:
        return "올바른 지역 형식이 아닙니다."
    if JHO_area in JHO_pop[2015]:
        JHO_12 = sum(JHO_pop[year][JHO_area]["여성"] for year in range(2015, 2024)) / 9
        return str(JHO_area) + "의 9년간 평균 여성인구는 " + str(int(JHO_12)) + "명입니다."
    else:
        return str(JHO_area) + "의 데이터가 존재하지 않습니다."

#########################################################################
# 5. 연도별 인구 상위 5개 지역 출력

# 5-1. 연도별 전체 인구 상위 5개 지역 출력
def JHO_top5_t(JHY_year):
    try:
        JHY_year = int(JHY_year)
    except ValueError:
        return "올바른 형식의 연도를 입력해야 합니다."

    if JHY_year in JHO_pop:
        # 연도의 데이터에서 상위 5개 지역 정렬
        JHY_sorted_data = sorted(JHO_pop[JHY_year].items(), key=lambda x: x[1], reverse=True)
        JHY_top5 = JHY_sorted_data[:5]
        return JHY_top5
    else:
        return f"{JHY_year}년 데이터가 존재하지 않습니다."    
        
# 5-2. 연도별 남성 인구 상위 5개 지역 출력

# 5-3. 연도별 여성 인구 상위 5개 지역 출력

#########################################################################
# 6. 특정 연도 지역의 성비
def JHO_gender_ratio(JHO_year, JHO_area):
    try:
        JHO_year = int(JHO_year)
    except ValueError:
        return "올바른 형식의 연도를 입력해야 합니다."
    if JHO_year in JHO_pop:
        if JHO_area in JHO_pop[JHO_year]:
            JHO_m = JHO_pop[JHO_year][JHO_area]["남성"]
            JHO_w = JHO_pop[JHO_year][JHO_area]["여성"]
            JHO_t = JHO_m + JHO_w
            if JHO_t == 0:
                return str(JHO_year)+"년"+str(JHO_area)+"의 인구가 0명입니다."
            JHO_m_ratio = (JHO_m / JHO_t) * 100
            JHO_w_ratio = (JHO_w / JHO_t) * 100

            return str(JHO_year)+"년"+str(JHO_area)+"의 남성 비율은 "+str(JHO_m_ratio)+"%, 여성 비율은 "+str(JHO_w_ratio)+"%입니다."
        else:
            return str(JHO_area)+"의 데이터가 존재하지 않습니다."
    else:
        return str(JHO_year)+"년의 데이터가 존재하지 않습니다."
#########################################################################
# 7. 그래프

# 7-1. 특정 연도의 지역별 인구 그래프
import turtle

# 터틀 그래프로 바 차트 그리기 함수
def JHO_year_graph(JHO_year):
    # 터틀 초기화
    screen = turtle.Screen()
    screen.setup(width=1000, height=400)  # 화면 크기를 더 작게 설정
    t = turtle.Turtle()
    t.speed(0)

    # 그래프 기본 설정
    t.penup()
    t.goto(-2000, -150)  # 시작 위치
    t.pendown()

    # 바 차트 그리기
    bar_width = 30  # 바 너비를 작게 설정
    spacing = 5  # 간격을 작게 설정
    x_pos = -200
    max_height = 40000000  # 최대 높이를 더 작은 값으로 설정 (비례적 스케일링)

    for region, pop_data in JHO_pop[JHO_year].items():
        population = pop_data["총"]

        # 바 높이 계산 (스케일을 더 낮춰서 그래프 크기를 줄임)
        bar_height = (population / max_height) * 200  # 비례적 스케일링

        # 바 그리기
        t.penup()
        t.goto(x_pos, -150)
        t.pendown()
        t.begin_fill()
        t.fillcolor("black")
        t.setheading(90)
        t.forward(bar_height)
        t.right(90)
        t.forward(bar_width)
        t.right(90)
        t.forward(bar_height)
        t.end_fill()

        # 지역명 표시
        t.penup()
        t.goto(x_pos + bar_width / 2, -170)  # 지역명을 그래프 밑에 조금 더 가깝게 설정
        t.write(region, align="center")

        # 다음 바로 이동
        x_pos += bar_width + spacing

    # 터틀 숨기기
    t.hideturtle()
    screen.mainloop()

# 7-2. 특정 지역의 연도별 총인구 그래프

# 7-3. 특정 지역의 연도별 남성인구 그래프

# 7-4. 특정 지역의 연도별 여성인구 그래프

# 7-5. 특정 연도의 지역별 총인구, 남성인구, 여성인구 그래프

##########################################################################
# 시작메뉴
def JHO_menu():
    while True:
        print("본 프로그램은 2015 ~ 2023년까지의 한국 시도별 인구 데이터를 통계하는 프로그램입니다.")
        print("원하시는 기능을 입력해주세요.")
        print("1. 특정 연도의 인구 추출")
        print("2. 특정 연도의 지역 인구 추출")
        print("3. 특정 연도의 최고 인구, 최저 인구")
        print("4. 특정 지역의 9년간 평균 인구 계산")
        print("5. 연도별 인구 상위 5개 지역 출력")
        print("6. 특정 연도 및 지역의 성비")
        print("7. 그래프로 손쉽게 확인하기")
        print("8. 종료")
        JHO_cho = int(input("숫자를 입력하세요."))
        # 1번을 누를 시
        if JHO_cho == 1:
            JHO_year = int(input("연도를 입력해주세요. (2015 ~ 2024)"))
            JHO_sel = input("전체, 남성, 여성 중에 선택해주세요.")
            if JHO_cho_1 == "전체":
                print(JHO_year_total(JHO_year))
            elif JHO_sel == "남성":
                print(JHO_year_m(JHO_year))
            elif JHO_sel == "여성":
                print(JHO_year_w(JHO_year))
            else:
                print(JHO_cho_1+"은 확인할 수 없는 단어입니다.")
        # 2번을 누를 시
        if JHO_cho == 2:
            JHO_year = int(input("연도를 입력해주세요. (2015 ~ 2023)"))
            JHO_sel = input("전체, 남성, 여성 중에 선택해주세요.")
            JHO_area = input("지역을 입력해주세요.(서울, 부산, 인천, 대전, 경기, 강원 등)")
            if JHO_sel == "전체":
                print(JHO_year_area_total(JHO_year, JHO_area))
            elif JHO_sel == "남성":
                print(JHO_year_area_m(JHO_year, JHO_area))
            elif JHO_sel =="여성":
                print(JHO_year_area_w(JHO_year, JHO_area))
            else:
                print("올바른 형식이 아닙니다.")
        
        # 3번을 누를 시

        # 4번을 누를 시
        if JHO_cho == 4:
            JHO_area = input("지역을 입력해주세요.(서울, 부산, 인천, 대전, 경기, 강원 등)")
            JHO_sel = input("전체, 남성, 여성 중에 선택해주세요.")
            if JHO_sel =="전체":
                print(JHO_9_t(JHO_area))
            elif JHO_sel =="남성":
                print(JHO_9_m(JHO_area))
            elif JHO_sel =="여성":
                print(JHO_9_w(JHO_area))
            else:
                print("올바른 형식이 아닙니다.")


        # 5번을 누를 시

        # 6번을 누를 시
        if JHO_cho == 7:
                JHO_year = int(input("연도를 입력해주세요. (2015 ~ 2023)"))
                JHO_area = input("지역을 입력해주세요.(서울, 부산, 인천, 대전, 경기, 강원 등)")
                print(JHO_gender_ratio(JHO_year, JHO_area))

        # 7번을 누를 시

        # 8번을 누를 시
        elif JHO_cho == 9:
            print("이용해주셔서 감사합니다. 프로그램을 종료합니다.")
            break
        # 잘못된 번호를 누를 시
        else:
            print("잘못된 숫자입니다. 다시 작성해주세요.")
JHO_menu()
